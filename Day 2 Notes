################
Day 2 Notes
################
awk / gawk :
    used for pattern matching and processing language
    useful for formatting after going through a lot of data
    awk uses variable amount of whitespace as a delimter, way more dvanced as cut
    
Example 1:

awk '{print}' 'file name' --> will print all the files in a document, same as cat
awk '/latte. {print}' 'filename' --> will print every line that has latte in it, prints anything with a line that matches the pattern

Example 2:
  file with banes store and salary
    
    mike manager store 450000

  awk '{print $1,4}' 'filename'
  will output
  
    mike 450000
    
Example 3:
    cat /etc/passwd
    student:x:1001:1001::/home/student/usr/sbin/bash
    
    tail /etc/passwd | awk -F: '{print  $NF}'
    
    '-F:' --> field separatd value by :
    $NF --> number of fields, print the last field
    
    output /home/student/usr/sbin/nologin
    
    Line numbers
    awk '{print NR,$0}' 'filename' --> $0 entireline, NR line numbers
    awk  'NR==3, NR==7 {print NR,$0}' 'filename' --> NR==3,7 will find line numbers between those lines, '{print NR, $1,$3<4}' will print fields 1,3,4
    
    
##################
Sort: 
##################
        cat abc.txt
            a
            b
            bB
            B
            A
            4
            9
            4
            z
            $
            10
        sort abc.txt 
            symbols first, numbers, ascii values, then alphabetical, capital to lowercase
            
        sort -o (output) 'newfile' 'file' : outputs to a new file
        
        sort -k 2 (columns) 'filename' : sorts by the 2nd column, if it doesn't have a column
        
        sort -u (remove dupilcates) 'filename' : removes the duplicates, has to be the exact same string, is case sensitive
        
        sort -n (numbers) -r (reverse) 'filename' : numerically, so this one does math arithmetically, lowest number to biggest number
        
        other options
            -r : reverse
###############
sed : stream editor
###############
      used for substituion, edit files without even opening them
      
      sed 's/(substituion word)/(new word)'
        
        Example:
            sed 's/tea/coffee' beststuff.txt, will only subsistute the first word in the same line
            
        Example: to change all the names, including multiple instances of a word in a line, to make changes perm have to outfile it
            sed 's/tea/cofee/g(lobal)' beststuff.txt
    
        Example: can change by lines by the second occurence in a a line
            sed 's/tea/cofee/2' beststuff.txt
            
        Example: just in a line
            sed '"line#,line#" s/tea/coffee/g(entirelines)' 'filename'
            sed '5 s/crazy/coffee/' beststuff.txt
            
############

############
